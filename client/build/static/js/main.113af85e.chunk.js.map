{"version":3,"sources":["components/layouts/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layouts/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layouts/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","utils/CutText/cutText.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","API_URL","getRequest","posts","request","getNumberOfPosts","data","length","getPages","Math","ceil","amount","postsPerPage","createActionName","name","START_REQUEST","startRequest","type","END_REQUEST","endRequest","ERROR_REQUEST","errorRequest","error","RESET_REQUEST","resetRequest","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POSTS_PAGE","loadPostsByPage","payload","initialState","pending","success","singlePost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","cutText","content","maxLength","substr","PostSummary","id","author","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","skipToPage","increment","pages","faChevronLeft","onClick","Array","el","page","faChevronRight","Posts","pagination","loadPostsPage","resetRequestStatus","postsNumber","message","connect","dispatch","a","startAt","limit","axios","get","res","Promise","resolve","reject","setTimeout","loadPostsByPageRequest","HomePage","PostsCounter","postsCount","loadPosts","PostsPage","SinglePost","loadSinglePost","appId","href","loadSinglePostRequest","SinglePostContainer","match","params","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","tag","options","placeholder","toolbar","buttons","addPostRequest","AddPost","ContactPage","NotFoundPage","App","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.113af85e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layouts/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n   state = {\r\n      links: [\r\n         { path: '/', title: 'Home' },\r\n         { path: '/posts/new', title: 'Add post' },\r\n         { path: '/posts', title: 'Posts' },\r\n         { path: '/contact', title: 'Contact' }\r\n      ]\r\n   };\r\n\r\n   render() {\r\n      const { links } = this.state;\r\n\r\n      return (\r\n         <nav className='navbar'>\r\n            <Logo />\r\n            <MainMenu links={links} />\r\n         </nav>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n   <div>\r\n      <PageContainer>\r\n         <NavBar />\r\n         {children}\r\n      </PageContainer>\r\n   </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = 'http://localhost:8000/api';\r\nexport const BASE_URL = 'http://localhost:3000/';\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n/* SELECTORS */\r\n\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getNumberOfPosts = ({ posts }) => posts.data.length;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\n\r\nexport const getPresentPage = ({ posts }) => posts.presentPage; // new add\r\n\r\n/* ACTIONS */\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\n\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\n\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\n\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\n\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\n\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n   data: [],\r\n   request: {\r\n      pending: false,\r\n      error: null,\r\n      success: null\r\n   },\r\n   singlePost: {},\r\n   amount: 0,\r\n   postsPerPage: 10,\r\n   presentPage: 1\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n   switch (action.type) {\r\n      case START_REQUEST:\r\n         return { ...statePart, request: { pending: true, error: null, success: null } };\r\n      case END_REQUEST:\r\n         return { ...statePart, request: { pending: false, error: null, success: true } };\r\n      case ERROR_REQUEST:\r\n         return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n      case RESET_REQUEST:\r\n         return { ...statePart, request: { pending: false, error: null, success: null } };\r\n      case LOAD_POSTS:\r\n         return { ...statePart, data: action.payload };\r\n      case LOAD_SINGLE_POST:\r\n         return { ...statePart, singlePost: action.payload };\r\n      case LOAD_POSTS_PAGE:\r\n         return {\r\n            ...statePart,\r\n            postsPerPage: action.payload.postsPerPage,\r\n            presentPage: action.payload.presentPage,\r\n            amount: action.payload.amount,\r\n            data: [...action.payload.posts]\r\n         };\r\n      default:\r\n         return statePart;\r\n   }\r\n}\r\n\r\n/* THUNKS */\r\n\r\nexport const loadPostsRequest = () => {\r\n   return async dispatch => {\r\n      dispatch(startRequest());\r\n      try {\r\n         let res = await axios.get(`${API_URL}/posts`);\r\n         await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n         dispatch(loadPosts(res.data));\r\n         dispatch(endRequest());\r\n      } catch (e) {\r\n         dispatch(errorRequest(e.message));\r\n      }\r\n   };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n   return async dispatch => {\r\n      dispatch(startRequest());\r\n      try {\r\n         let res = await axios.get(`${API_URL}/posts/${id}`);\r\n         dispatch(loadSinglePost(res.data[0]));\r\n         dispatch(endRequest());\r\n      } catch (e) {\r\n         dispatch(errorRequest(e.message));\r\n      }\r\n   };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n   return async dispatch => {\r\n      dispatch(startRequest());\r\n      try {\r\n         await axios.post(`${API_URL}/posts`, post);\r\n         dispatch(endRequest());\r\n      } catch (e) {\r\n         dispatch(errorRequest(e.message));\r\n      }\r\n   };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n   return async dispatch => {\r\n      dispatch(startRequest());\r\n      try {\r\n         const startAt = (page - 1) * postsPerPage;\r\n         const limit = postsPerPage;\r\n\r\n         let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n         await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\r\n         const payload = {\r\n            posts: res.data.posts,\r\n            amount: res.data.amount,\r\n            postsPerPage,\r\n            presentPage: page\r\n         };\r\n\r\n         dispatch(loadPostsByPage(payload));\r\n         dispatch(endRequest());\r\n      } catch (e) {\r\n         dispatch(errorRequest(e.message));\r\n      }\r\n   };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n   <p {...otherProps} className='html-box'>\r\n      {ReactHtmlParser(children)}\r\n   </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n   children: PropTypes.string\r\n};\r\n\r\nexport default HtmlBox;\r\n","const cutText = (content, maxLength) => {\r\n   if (content.length < 1) return 'Error';\r\n   if (content.length <= maxLength) return content;\r\n   return content.substr(0, maxLength) + '...';\r\n};\r\n\r\nexport default cutText;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from '../../../utils/CutText/cutText';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n   <article className='post-summary'>\r\n      <SmallTitle>{title}</SmallTitle>\r\n      <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n      <p>Author: {author}</p>\r\n      <Button variant='primary'>\r\n         <Link to={'posts/' + id}>Read more</Link>\r\n      </Button>\r\n      {/* <Button variant='primary'>\r\n         <Link to={'posts/edit/' + id}>Edit</Link>\r\n      </Button> */}\r\n   </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n   id: PropTypes.string,\r\n   title: PropTypes.string,\r\n   content: PropTypes.string,\r\n   author: PropTypes.string\r\n};\r\n\r\nexport default PostSummary;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n   <div>\r\n      <section className='posts-list'>\r\n         {posts.map(post => (\r\n            <PostSummary key={post.id} {...post} />\r\n         ))}\r\n      </section>\r\n   </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n   posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.string.isRequired,\r\n         title: PropTypes.string.isRequired,\r\n         content: PropTypes.string.isRequired,\r\n         author: PropTypes.string.isRequired\r\n      })\r\n   )\r\n};\r\n\r\nexport default PostsList;\r\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n   state = {\r\n      presentPage: this.props.initialPage || 1\r\n   };\r\n\r\n   changePage = newPage => {\r\n      const { onPageChange, postsPerPage } = this.props;\r\n      this.setState({ presentPage: newPage });\r\n      onPageChange(newPage, postsPerPage);\r\n   };\r\n\r\n   skipToPage = increment => {\r\n      const { changePage } = this;\r\n      const { presentPage } = this.state;\r\n      const targetPage = presentPage + increment;\r\n      changePage(targetPage);\r\n   };\r\n\r\n   render() {\r\n      const { pages } = this.props;\r\n      const { presentPage } = this.state;\r\n      const { changePage, skipToPage } = this;\r\n\r\n      return (\r\n         <div className='pagination'>\r\n            <ul className='pagination__list'>\r\n               {presentPage >= 2 && (\r\n                  <li className='pagination__list__item'>\r\n                     <FontAwesomeIcon\r\n                        icon={faChevronLeft}\r\n                        onClick={() => {\r\n                           skipToPage(-1);\r\n                        }}\r\n                     />\r\n                  </li>\r\n               )}\r\n\r\n               {[...Array(pages)].map((el, page) => (\r\n                  <li\r\n                     key={++page}\r\n                     onClick={() => {\r\n                        changePage(page);\r\n                     }}\r\n                     className={`pagination__list__item${page === presentPage ? ' pagination__list__item--active' : ''}`}>\r\n                     {page}\r\n                  </li>\r\n               ))}\r\n\r\n               {presentPage !== pages && (\r\n                  <li className='pagination__list__item'>\r\n                     <FontAwesomeIcon\r\n                        icon={faChevronRight}\r\n                        onClick={() => {\r\n                           skipToPage(1);\r\n                        }}\r\n                     />\r\n                  </li>\r\n               )}\r\n            </ul>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nPagination.propTypes = {\r\n   pages: PropTypes.number.isRequired,\r\n   initialPage: PropTypes.number,\r\n   onPageChange: PropTypes.func.isRequired,\r\n   postsPerPage: PropTypes.number\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n   // new add\r\n   state = {\r\n      initialPage: this.props.initialPage || 1,\r\n      postsPerPage: this.props.postsPerPage || 10,\r\n      pagination: this.props.pagination\r\n   };\r\n   //\r\n   componentDidMount() {\r\n      const { loadPostsByPage, resetRequestStatus } = this.props;\r\n      const { initialPage, postsPerPage } = this.state;\r\n      resetRequestStatus();\r\n      loadPostsByPage(initialPage, postsPerPage);\r\n   }\r\n\r\n   loadPostsPage = page => {\r\n      const { loadPostsByPage } = this.props;\r\n      const { postsPerPage } = this.state;\r\n      loadPostsByPage(page, postsPerPage);\r\n   };\r\n\r\n   render() {\r\n      const { pagination, postsPerPage } = this.state;\r\n      const { posts, request, postsNumber, pages, presentPage } = this.props;\r\n      const { loadPostsPage } = this;\r\n\r\n      if (request.pending === false && request.success === true && postsNumber > 0 && !pagination) {\r\n         return (\r\n            <div>\r\n               <PostsList posts={posts} />\r\n            </div>\r\n         );\r\n      } else if (request.pending === false && request.success === true && postsNumber > 0 && pagination) {\r\n         return (\r\n            <div>\r\n               <PostsList posts={posts} />\r\n               <Pagination pages={pages} initialPage={presentPage} onPageChange={loadPostsPage} postsPerPage={postsPerPage} />\r\n            </div>\r\n         );\r\n      } else if (request.pending === true && request.success === null) {\r\n         return (\r\n            <div>\r\n               <Spinner />\r\n            </div>\r\n         );\r\n      } else if (request.pending === false && request.error != null) {\r\n         return (\r\n            <div>\r\n               <Alert variant='error'>{request.error.message}</Alert>;\r\n            </div>\r\n         );\r\n      } else if (request.pending === false && request.success === true && postsNumber === 0) {\r\n         return (\r\n            <div>\r\n               <Alert variant='info'>No posts</Alert>\r\n            </div>\r\n         );\r\n      } else {\r\n         return <div />;\r\n      }\r\n   }\r\n}\r\n\r\nPosts.propTypes = {\r\n   posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.string.isRequired,\r\n         title: PropTypes.string.isRequired,\r\n         content: PropTypes.string.isRequired,\r\n         author: PropTypes.string.isRequired\r\n      })\r\n   ),\r\n   request: PropTypes.object.isRequired,\r\n   postsNumber: PropTypes.number.isRequired,\r\n   loadPostsByPage: PropTypes.func.isRequired,\r\n   resetRequestStatus: PropTypes.func.isRequired,\r\n   presentPage: PropTypes.number.isRequired,\r\n   initialPage: PropTypes.number,\r\n   postsPerPage: PropTypes.number,\r\n   pagination: PropTypes.bool\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, getPosts, getNumberOfPosts, loadPostsByPageRequest, getPages, resetRequest, getPresentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n   posts: getPosts(state),\r\n   request: getRequest(state),\r\n   postsNumber: getNumberOfPosts(state),\r\n   pages: getPages(state),\r\n   presentPage: getPresentPage(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n   resetRequestStatus: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Posts);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n   <div>\r\n      <PageTitle>Blog</PageTitle>\r\n      <Posts postsPerPage={3} pagination={false} />\r\n   </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n   render() {\r\n      const { postsCount } = this.props;\r\n\r\n      return <div>Posts amount: {postsCount > 0 ? postsCount : 'no posts'}</div>;\r\n   }\r\n}\r\n\r\nPostsCounter.propTypes = {\r\n   posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.string.isRequired,\r\n         title: PropTypes.string.isRequired,\r\n         content: PropTypes.string.isRequired\r\n      })\r\n   ),\r\n   loadPosts: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from 'react-redux';\r\nimport { getNumberOfPosts, getRequest, loadPostsRequest } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n   postsCount: getNumberOfPosts(state),\r\n   request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   loadPosts: () => dispatch(loadPostsRequest())\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(PostsCounter);\r\n","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n   <div>\r\n      <PageTitle>Posts list</PageTitle>\r\n      <PostsCounter />\r\n      <Posts initialPage={1} postsPerPage={10} pagination={true} />\r\n   </div>\r\n);\r\n\r\nexport default PostsPage;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\n\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\n\r\nimport '../PostSummary/PostSummary.scss';\r\nimport { BASE_URL } from '../../../../src/config';\r\n\r\nclass SinglePost extends React.Component {\r\n   componentDidMount() {\r\n      const { loadSinglePost, id, resetRequestStatus } = this.props;\r\n      resetRequestStatus();\r\n      loadSinglePost(id);\r\n   }\r\n\r\n   render() {\r\n      const { singlePost, request, location } = this.props;\r\n\r\n      if (request.pending === false && request.success === true && singlePost) {\r\n         return (\r\n            <div>\r\n               <article className='post-summary'>\r\n                  <SmallTitle>{singlePost.title}</SmallTitle>\r\n                  <div>author: {singlePost.author}</div>\r\n                  <HtmlBox>{singlePost.content}</HtmlBox>\r\n                  <FacebookProvider appId='488475995284451'>\r\n                     <ShareButton className='button button-primary' href={`${BASE_URL}${location.pathname}`}>\r\n                        Share\r\n                     </ShareButton>\r\n                     <Comments href={`${BASE_URL}${location.pathname}`} />\r\n                  </FacebookProvider>\r\n               </article>\r\n            </div>\r\n         );\r\n      } else if (request.pending === true && request.success === null) {\r\n         return (\r\n            <div>\r\n               <Spinner />\r\n            </div>\r\n         );\r\n      } else if (request.pending === false && request.error !== null) {\r\n         return (\r\n            <div>\r\n               <Alert variant='error'>{request.error}</Alert>\r\n            </div>\r\n         );\r\n      } else if (request.pending === false && request.success === true && singlePost === null) {\r\n         return (\r\n            <div>\r\n               <Alert variant='info'>No post</Alert>\r\n            </div>\r\n         );\r\n      } else {\r\n         return <div />;\r\n      }\r\n   }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n   singlePost: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n   }),\r\n   loadSinglePost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, getSinglePost, loadSinglePostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n   singlePost: getSinglePost(state),\r\n   request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   loadSinglePost: id => dispatch(loadSinglePostRequest(id)),\r\n   resetRequestStatus: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(SinglePost);\r\n","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport SinglePostContainer from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePost = props => (\r\n   <div>\r\n      <PageTitle>Single post</PageTitle>\r\n      <SinglePostContainer id={props.match.params.id} />\r\n   </div>\r\n);\r\n\r\nexport default SinglePost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n   state = {\r\n      post: {\r\n         title: '',\r\n         content: '',\r\n         author: ''\r\n      }\r\n   };\r\n\r\n   componentDidMount() {\r\n      const { resetRequestStatus } = this.props;\r\n      resetRequestStatus();\r\n   }\r\n\r\n   handleChange = e => {\r\n      const { post } = this.state;\r\n      this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n   };\r\n\r\n   handleEditor = text => {\r\n      const { post } = this.state;\r\n      this.setState({ post: { ...post, content: text } });\r\n   };\r\n\r\n   addPost = e => {\r\n      const { addPost } = this.props;\r\n      const { post } = this.state;\r\n\r\n      e.preventDefault();\r\n      addPost(post);\r\n   };\r\n\r\n   render() {\r\n      const { post } = this.state;\r\n      const { handleChange, handleEditor, addPost } = this;\r\n      const { request } = this.props;\r\n\r\n      if (request.error) return <Alert variant='error'>{request.error}</Alert>;\r\n      else if (request.success) return <Alert variant='success'>Post has been added!</Alert>;\r\n      else if (request.pending) return <Spinner />;\r\n      else if (request.error) return <Alert variant='error'>{request.error}</Alert>;\r\n      else if (request.success) return <Alert variant='success'>Post has been added!</Alert>;\r\n      else if (request.pending) return <Spinner />;\r\n      else\r\n         return (\r\n            <form onSubmit={addPost}>\r\n               <TextField label='Title' value={post.title} onChange={handleChange} name='title' />\r\n               <TextField label='Author' value={post.author} onChange={handleChange} name='author' />\r\n               <SectionTitle>Edit post content</SectionTitle>\r\n               <Editor\r\n                  className='content-editor'\r\n                  tag='pre'\r\n                  text={post.content}\r\n                  onChange={handleEditor}\r\n                  options={{\r\n                     placeholder: false,\r\n                     toolbar: {\r\n                        buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']\r\n                     }\r\n                  }}\r\n               />\r\n               <Button variant='primary'>Add post</Button>\r\n            </form>\r\n         );\r\n   }\r\n}\r\n\r\nPostForm.propTypes = {\r\n   request: PropTypes.object.isRequired,\r\n   addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n   request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addPost: post => dispatch(addPostRequest(post)),\r\n   resetRequestStatus: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(PostForm);\r\n","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst AddPost = () => (\r\n   <div>\r\n      <PageTitle>Add post</PageTitle>\r\n      <PostForm />\r\n   </div>\r\n);\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n   <div>\r\n      <PageTitle>Contact</PageTitle>\r\n      <p>\r\n         Your Favourite Blooger Ltd\r\n         <br />\r\n         9432 Division Street\r\n         <br />\r\n         Stone Mountain, GA 30083\r\n      </p>\r\n      <p>Mobile Number: 207-914-3411</p>\r\n   </div>\r\n);\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n   <div>\r\n      <h1>404 Not Found</h1>\r\n   </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainLayout from './components/layouts/MainLayout/MainLayout';\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\n\nclass App extends React.Component {\n   render() {\n      return (\n         <MainLayout>\n            <Switch>\n               <Route path='/' exact component={Home} />\n               <Route path='/posts' exact component={Posts} />\n               <Route path='/posts/new' exact component={AddPost} />\n               <Route path='/posts/:id' exact component={SinglePost} />\n               <Route path='/contact' exact component={Contact} />\n               <Route component={NotFound} />\n            </Switch>\n         </MainLayout>\n      );\n   }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n   posts\r\n});\r\n\r\n// create store\r\nconst store = createStore(\r\n   rootReducer,\r\n   compose(\r\n      applyMiddleware(thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n   )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n   <Provider store={store}>\n      <Router>\n         <App />\n      </Router>\n   </Provider>\n);\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}